@model RecordStore.Models.Record

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Record</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="imagePreview" class="image-preview">
                <h3>Image Preview:</h3>
                <img id="previewImage" class="preview-image" src="#" alt="Artist Image Preview" />
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" type="file" class="form-control" id="imageFile" accept="image/*" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ArtistId" class="control-label">Artist</label>
                <select asp-for="ArtistId" class="form-control">
                    <option value="">Select An Artist</option>
                    @await Component.InvokeAsync("ArtistDropdown")
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Condition" class="control-label"></label>
                <select asp-for="Condition" class="form-control">
                    @foreach (var condition in Enum.GetValues(typeof(RecordStore.Data.Enums.Condition)))
                    {
                        var formattedCondition = condition.ToString();
                        @if (condition.ToString()!.EndsWith("Plus"))
                        {
                            formattedCondition = condition.ToString()!.Replace("Plus", "+");
                        }

                        <option value="@condition">@formattedCondition</option>
                    }
                </select>
                <span asp-validation-for="Condition" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script src="~/js/imagePreview.js"></script>
<link rel="stylesheet" type="text/css" href="~/css/imagePreview.css" />
<style scoped>
    .form-group {
        margin-bottom: 10px;
    }
</style>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
